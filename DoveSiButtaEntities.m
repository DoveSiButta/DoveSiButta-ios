/**
*
*Copyright 2010 OuterCurve Foundation
*
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at
*
*http://www.apache.org/licenses/LICENSE-2.0
*
*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*/
/**
* This code was generated by the tool 'odatagen'.
* Runtime Version:1.0
*
* Changes to this file may cause incorrect behavior and will be lost if
* the code is regenerated.
*/
#import "DoveSiButtaEntities.h"
/**
 * @interface:Box
 * @key:BoxID
 */
@implementation DoveSiButtaModel_Box
	@synthesize m_BoxID;
	@synthesize m_Title;
	@synthesize m_EventDate;
	@synthesize m_Description;
	@synthesize m_HostedById;
	@synthesize m_HostedBy;
	@synthesize m_ContactPhone;
	@synthesize m_Address;
	@synthesize m_Country;
	@synthesize m_Latitude;
	@synthesize m_Longitude;
	@synthesize m_BoxType;
	@synthesize m_Picture_Filename;
	@synthesize m_Picture_File;
	@synthesize m_Ratings;

/**
 *Method to create an instance of Box
 */
+ (id) CreateBoxWithboxid:(NSNumber *)aBoxID title:(NSString *)aTitle eventdate:(NSDate *)aEventDate description:(NSString *)aDescription hostedby:(NSString *)aHostedBy contactphone:(NSString *)aContactPhone address:(NSString *)aAddress country:(NSString *)aCountry latitude:(NSDecimalNumber *)aLatitude longitude:(NSDecimalNumber *)aLongitude boxtype:(NSString *)aBoxType
{
	DoveSiButtaModel_Box *aBox = [[DoveSiButtaModel_Box alloc]init];
	
	aBox.m_BoxID = aBoxID;

	
	aBox.m_Title = aTitle;

	
	aBox.m_EventDate = aEventDate;

	
	aBox.m_Description = aDescription;

	
	aBox.m_HostedBy = aHostedBy;

	
	aBox.m_ContactPhone = aContactPhone;

	
	aBox.m_Address = aAddress;

	
	aBox.m_Country = aCountry;

	
	aBox.m_Latitude = aLatitude;

	
	aBox.m_Longitude = aLongitude;

	
	aBox.m_BoxType = aBoxType;

	return aBox;
}
/**
 * Initialising object for Box
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"Ratings" forKey:@"Ratings"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_BoxID"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"50" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Title"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.DateTime" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_EventDate"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"256" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Description"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"256" MinLength:@"" FixedLength:NO Nullable:YES Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_HostedById"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"256" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_HostedBy"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"20" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_ContactPhone"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"50" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Address"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"30" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Country"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Double" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Latitude"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Double" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Longitude"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"50" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_BoxType"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"50" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Picture_Filename"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Binary" MaxLength:@"Max" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Picture_File"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"FK_Ratings_Boxes" forKey:@"Ratings"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"BoxID"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"Box"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	
	return [syndicateArray autorelease];
}
-(DoveSiButtaModel_Box *)getDeepCopy
{
	DoveSiButtaModel_Box *obj=[[DoveSiButtaModel_Box alloc]initWithUri:[self getBaseURI]];
	[obj setBoxID:[self getBoxID]];
	[obj setTitle:[self getTitle]];
	[obj setEventDate:[self getEventDate]];
	[obj setDescription:[self getDescription]];
	[obj setHostedById:[self getHostedById]];
	[obj setHostedBy:[self getHostedBy]];
	[obj setContactPhone:[self getContactPhone]];
	[obj setAddress:[self getAddress]];
	[obj setCountry:[self getCountry]];
	[obj setLatitude:[self getLatitude]];
	[obj setLongitude:[self getLongitude]];
	[obj setBoxType:[self getBoxType]];
	[obj setPicture_Filename:[self getPicture_Filename]];
	[obj setPicture_File:[self getPicture_File]];
	[obj setRatings:[self getRatings]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_BoxID release];
	m_BoxID = nil;
	[m_Title release];
	m_Title = nil;
	[m_EventDate release];
	m_EventDate = nil;
	[m_Description release];
	m_Description = nil;
	[m_HostedById release];
	m_HostedById = nil;
	[m_HostedBy release];
	m_HostedBy = nil;
	[m_ContactPhone release];
	m_ContactPhone = nil;
	[m_Address release];
	m_Address = nil;
	[m_Country release];
	m_Country = nil;
	[m_Latitude release];
	m_Latitude = nil;
	[m_Longitude release];
	m_Longitude = nil;
	[m_BoxType release];
	m_BoxType = nil;
	[m_Picture_Filename release];
	m_Picture_Filename = nil;
	[m_Picture_File release];
	m_Picture_File = nil;
	
	[m_Ratings release];
	m_Ratings = nil;
	[super dealloc];
}

@end
/**
 * @interface:Rating
 * @key:RatingID
 */
@implementation DoveSiButtaModel_Rating
	@synthesize m_RatingID;
	@synthesize m_BoxID;
	@synthesize m_AttendeeName;
	@synthesize m_AttendeeNameId;
	@synthesize m_RatingValue;
	@synthesize m_Box;

/**
 *Method to create an instance of Rating
 */
+ (id) CreateRatingWithratingid:(NSNumber *)aRatingID boxid:(NSNumber *)aBoxID attendeename:(NSString *)aAttendeeName
{
	DoveSiButtaModel_Rating *aRating = [[DoveSiButtaModel_Rating alloc]init];
	
	aRating.m_RatingID = aRatingID;

	
	aRating.m_BoxID = aBoxID;

	
	aRating.m_AttendeeName = aAttendeeName;

	return aRating;
}
/**
 * Initialising object for Rating
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"Boxes" forKey:@"Box"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_RatingID"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_BoxID"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"256" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_AttendeeName"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"256" MinLength:@"" FixedLength:NO Nullable:YES Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_AttendeeNameId"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_RatingValue"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"FK_Ratings_Boxes" forKey:@"Boxes"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"RatingID"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"Rating"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	
	return [syndicateArray autorelease];
}
-(DoveSiButtaModel_Rating *)getDeepCopy
{
	DoveSiButtaModel_Rating *obj=[[DoveSiButtaModel_Rating alloc]initWithUri:[self getBaseURI]];
	[obj setRatingID:[self getRatingID]];
	[obj setBoxID:[self getBoxID]];
	[obj setAttendeeName:[self getAttendeeName]];
	[obj setAttendeeNameId:[self getAttendeeNameId]];
	[obj setRatingValue:[self getRatingValue]];
	[obj setBox:[self getBox]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_RatingID release];
	m_RatingID = nil;
	[m_BoxID release];
	m_BoxID = nil;
	[m_AttendeeName release];
	m_AttendeeName = nil;
	[m_AttendeeNameId release];
	m_AttendeeNameId = nil;
	[m_RatingValue release];
	m_RatingValue = nil;
	
	[m_Box release];
	m_Box = nil;
	[super dealloc];
}

@end

 
/**
 * Container interface DoveSiButtaEntities, Namespace: DoveSiButtaModel
 */
@implementation DoveSiButtaEntities 

	@synthesize m_OData_etag;

	@synthesize m_Boxes;
	@synthesize m_Ratings;
/**
 * The initializer for DoveSiButtaEntities accepting service URI
 */
- (id) init
{
	NSString* tmpuri =[[NSString alloc]initWithString:DEFAULT_SERVICE_URL];
	self=[self initWithUri:tmpuri credential:nil];
	[tmpuri release];
	return self;
}

- (id) initWithUri:(NSString*)anUri credential:(id)acredential
{
	NSString* tmpuri=nil;
	if([anUri length]==0)
	{
	 	tmpuri = DEFAULT_SERVICE_URL;
	}
	else
	{
		tmpuri =[NSString stringWithString:anUri];
	}
	if(![tmpuri hasSuffix:@"/"])
	{
		tmpuri=[tmpuri stringByAppendingString:@"/"];
	}

	if(self=[super initWithUri:tmpuri credentials:acredential dataServiceVersion:DataServiceVersion])
	{
		[super setServiceNamespace:@"DoveSiButtaModel"];

		NSMutableArray* tempEntities=[[NSMutableArray alloc]init];
		
		[tempEntities addObject:@"Boxes"];
		[tempEntities addObject:@"Ratings"];

		if([tempEntities count] > 0 )
		{
			[super setEntitiesWithArray:tempEntities];
		}
		[tempEntities release];

		NSMutableArray* tempEntitiySetKey=[[NSMutableArray alloc]init];
		
		[tempEntitiySetKey addObject:@"boxes"];
		[tempEntitiySetKey addObject:@"ratings"];

		NSMutableArray* tempEntitiyTypeobj=[[NSMutableArray alloc]init];
		
		[tempEntitiyTypeobj addObject:@"Box"];
		[tempEntitiyTypeobj addObject:@"Rating"];

		if( ( [tempEntitiySetKey count] > 0 ) && ( [tempEntitiyTypeobj count] > 0 ) )
		{
			[super setEntitySet2TypeWithObject:tempEntitiyTypeobj forKey:tempEntitiySetKey];

		}

		[tempEntitiySetKey release];
		[ tempEntitiyTypeobj release];

		NSMutableArray* tempEntitiyTypeKey=[[NSMutableArray alloc]init];
		
		[tempEntitiyTypeKey addObject:@"box"];
		[tempEntitiyTypeKey addObject:@"rating"];
		NSMutableArray* tempEntitySetObj=[[NSMutableArray alloc]init];
		
		[tempEntitySetObj addObject:@"Boxes"];
		[tempEntitySetObj addObject:@"Ratings"];

		if( ( [tempEntitiyTypeKey count] > 0 ) && ( [tempEntitySetObj count] > 0 ) )
		{
			[super setEntityType2SetWithObject:tempEntitySetObj forKey:tempEntitiyTypeKey];

		}
    	[tempEntitiyTypeKey release];
		[tempEntitySetObj release];

		NSMutableArray* foreignKeys=[[NSMutableArray alloc]init];		
		[foreignKeys addObject:@"FK_Ratings_Boxes"];

		NSMutableArray *arrOfDictionaries=[[NSMutableArray alloc]initWithCapacity:[foreignKeys count]];

		NSMutableArray *arr;
 
		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Boxes",@"EndRole",@"Box",@"Type",@"1",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Ratings",@"EndRole",@"Rating",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];

		if( ( [foreignKeys count] > 0 ) && ( [arrOfDictionaries count] > 0 ) )
		{
			[super setAssociationforObjects:arrOfDictionaries forKeys:foreignKeys];
		}
		[foreignKeys release];
		[arrOfDictionaries release];

		m_Boxes = [[DataServiceQuery alloc]initWithUri:@"Boxes" objectContext: self];
		m_Ratings = [[DataServiceQuery alloc]initWithUri:@"Ratings" objectContext: self];
		
	}
	return self;
}

/*
 * Method for service operation
 */
- (NSArray *) FindUpcomingItems
{
	NSString *aQuery=[self prepareQuery:@"FindUpcomingItems" parameters:nil];
	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:YES];
}
/*
 * Method for service operation
 */
- (NSArray *) FindAllItems
{
	NSString *aQuery=[self prepareQuery:@"FindAllItems" parameters:nil];
	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:YES];
}
/*
 * Method for service operation
 */
- (NSArray *) ItemsNearMeWithplaceorzip:(NSString *)placeOrZip
{
	NSDictionary *params=[[NSDictionary alloc] initWithObjectsAndKeys:placeOrZip,@"placeOrZip",nil];
	NSString *aQuery=[self prepareQuery:@"ItemsNearMe" parameters:params];
	[params release];

	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:YES];
}
/*
 * Method for service operation
 */
- (NSArray *) ItemsNearMeByCoordinatesWithlatitude:(NSDecimalNumber *)latitude longitude:(NSDecimalNumber *)longitude
{
	NSDictionary *params=[[NSDictionary alloc] initWithObjectsAndKeys:latitude,@"latitude",longitude,@"longitude",nil];
	NSString *aQuery=[self prepareQuery:@"ItemsNearMeByCoordinates" parameters:params];
	[params release];

	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:YES];
}
/*
 * Method for service operation
 */
- (NSString *) CreateNewItemWithtitle:(NSString *)title latitude:(NSDecimalNumber *)latitude longitude:(NSDecimalNumber *)longitude address:(NSString *)address boxtype:(NSString *)boxType picture_filename:(NSString *)picture_filename
{
	NSDictionary *params=[[NSDictionary alloc] initWithObjectsAndKeys:title,@"title",latitude,@"latitude",longitude,@"longitude",address,@"address",boxType,@"boxType",picture_filename,@"picture_filename",nil];
	NSString *aQuery=[self prepareQuery:@"CreateNewItem" parameters:params];
	[params release];

	return [self executeServiceOperation:aQuery httpMethod:@"POST" isReturnTypeCollection:NO];
}
/*
 * Method for service operation
 */
- (NSString *) SetFileWithitemid:(NSNumber *)itemID file:(NSData *)file
{
	NSDictionary *params=[[NSDictionary alloc] initWithObjectsAndKeys:itemID,@"itemID",file,@"file",nil];
	NSString *aQuery=[self prepareQuery:@"SetFile" parameters:params];
	[params release];

	return [self executeServiceOperation:aQuery httpMethod:@"POST" isReturnTypeCollection:NO];
}
/*
 * Method for service operation
 */
- (NSString *) SetFileBase64Withitemid:(NSNumber *)itemID filebase64:(NSString *)fileBase64
{
	NSDictionary *params=[[NSDictionary alloc] initWithObjectsAndKeys:itemID,@"itemID",fileBase64,@"fileBase64",nil];
	NSString *aQuery=[self prepareQuery:@"SetFileBase64" parameters:params];
	[params release];

	return [self executeServiceOperation:aQuery httpMethod:@"POST" isReturnTypeCollection:NO];
}
/*
 * Method for service operation
 */
- (NSString *) GetFileWithitemid:(NSNumber *)itemID
{
	NSDictionary *params=[[NSDictionary alloc] initWithObjectsAndKeys:itemID,@"itemID",nil];
	NSString *aQuery=[self prepareQuery:@"GetFile" parameters:params];
	[params release];

	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:NO];
}
/*
 * Method for service operation
 */
- (NSString *) LoginWithusername:(NSString *)username password:(NSString *)password
{
	NSDictionary *params=[[NSDictionary alloc] initWithObjectsAndKeys:username,@"username",password,@"password",nil];
	NSString *aQuery=[self prepareQuery:@"Login" parameters:params];
	[params release];

	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:NO];
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset Boxes
 */
- (id) boxes
{
	[self.m_Boxes clearAllOptions];
	return self.m_Boxes;
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset Ratings
 */
- (id) ratings
{
	[self.m_Ratings clearAllOptions];
	return self.m_Ratings;
}

/**
 * Methods for adding object to the entityset/collection
 */

- (void) addToBoxes:(id)anObject
{
	[super addObject:@"Boxes" object:anObject];
}

- (void) addToRatings:(id)anObject
{
	[super addObject:@"Ratings" object:anObject];
}

- (void) dealloc
{
	[ m_OData_etag release];
	m_OData_etag = nil;
	
	[m_Boxes release];
	m_Boxes = nil;
	[m_Ratings release];
	m_Ratings = nil;

	[super dealloc];
}

@end
